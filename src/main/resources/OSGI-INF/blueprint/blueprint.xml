<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright (c) Lockheed Martin Corporation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version. 
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/

 -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
                    xmlns:bp="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0" >

     <cm:property-placeholder persistent-id="org.codice.opendx.transform.nitf" update-strategy="reload">
         <cm:default-properties>
             <cm:property name="org.codice.opendx.transform.nitf.path" value="/tmp/put_nitfs_here"/>
         </cm:default-properties>
     </cm:property-placeholder>

    <reference id="contentFramework" interface="ddf.content.ContentFramework" />

    <bean id="transformer"
          class="org.codice.opendx.NITFInputTransformer" >
        <property name="contentFramework" ref="contentFramework"/>
    </bean>

    <service ref="transformer" interface="ddf.catalog.transform.InputTransformer">
        <service-properties>
            <entry key="id" value="nitf" />
            <!-- List of mime type this AISInputTransformer supports -->
            <entry key="mime-type">
                <list>
                    <value>image/nitf</value>
                </list>
            </entry>
        </service-properties>
    </service>

    <bean id="alterationListener"
          class="org.codice.opendx.NITFFileAlterationListener" init-method="initializeJoms">
        <property name="content" ref="contentFramework"/>
    </bean>

    <bean id="nitfDirectoryWatcher" class="org.codice.opendx.utility.NITFDirectoryWatcher" init-method="init"
            destroy-method="destroy">
        <property name="path" value="${org.codice.opendx.transform.nitf.path}" />
        <property name="alterationListener" ref="alterationListener" />
    </bean>



</blueprint>
